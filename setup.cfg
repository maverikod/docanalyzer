[metadata]
name = docanalyzer
version = 0.1.0
description = Automated file monitoring and chunking for vector databases
long_description = file: README.md
long_description_content_type = text/markdown
author = DocAnalyzer Team
author_email = team@docanalyzer.com
url = https://github.com/docanalyzer/docanalyzer
project_urls =
    Bug Tracker = https://github.com/docanalyzer/docanalyzer/issues
    Documentation = https://docanalyzer.readthedocs.io
    Changelog = https://github.com/docanalyzer/docanalyzer/blob/main/CHANGELOG.md
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Topic :: Software Development :: Libraries :: Python Modules
    Topic :: Text Processing :: Linguistic
    Topic :: Scientific/Engineering :: Artificial Intelligence
keywords = document analysis, file monitoring, vector database, chunking, ai
license = MIT
license_file = LICENSE
platforms = unix, linux, osx, cygwin, win32
python_requires = >=3.9

[options]
packages = find:
package_dir =
    = .
python_requires = >=3.9
install_requires =
    watchdog>=2.1.0
    pathspec>=0.9.0
    fastapi>=0.68.0
    uvicorn>=0.15.0
    pydantic>=1.8.0
    requests>=2.25.0
    psutil>=5.8.0
    python-multipart>=0.0.5
zip_safe = no
include_package_data = True

[options.packages.find]
include = docanalyzer*
exclude = tests*, docs*, examples*

[options.package_data]
docanalyzer = py.typed

[options.extras_require]
dev =
    pytest>=6.0
    pytest-cov>=2.0
    pytest-asyncio>=0.18.0
    mypy>=0.910
    black>=21.0
    pylint>=2.9
    isort>=5.9
    flake8>=3.9
    pre-commit>=2.15
test =
    pytest>=6.0
    pytest-cov>=2.0
    pytest-asyncio>=0.18.0
    pytest-mock>=3.6.0
docs =
    sphinx>=4.0.0
    sphinx-rtd-theme>=1.0.0
    myst-parser>=0.15.0

[options.entry_points]
console_scripts =
    docanalyzer = docanalyzer.main:main

[flake8]
max-line-length = 88
extend-ignore = E203, W503
exclude = .git,__pycache__,.venv,venv,build,dist,.eggs,*.egg

[pylint]
max-line-length = 88
disable = C0114, C0115, C0116
good-names = i,j,k,ex,Run,_,id

[isort]
profile = black
multi_line_output = 3
line_length = 88
known_first_party = docanalyzer

[mypy]
python_version = 3.9
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
strict_equality = True

[mypy-watchdog.*]
ignore_missing_imports = True

[mypy-pathspec.*]
ignore_missing_imports = True

[mypy-fastapi.*]
ignore_missing_imports = True

[mypy-uvicorn.*]
ignore_missing_imports = True

[mypy-pydantic.*]
ignore_missing_imports = True

[mypy-requests.*]
ignore_missing_imports = True

[mypy-psutil.*]
ignore_missing_imports = True

[mypy-python_multipart.*]
ignore_missing_imports = True

[tool:pytest]
minversion = 6.0
addopts = -ra -q --strict-markers --strict-config
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests

[coverage:run]
source = docanalyzer
omit =
    */tests/*
    */test_*
    */__pycache__/*
    */migrations/*
    */venv/*
    */.venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod 